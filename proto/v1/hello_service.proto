syntax = "proto3";

package api.v1;
option go_package = "api/v1";

import "google/api/annotations.proto"; 
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "buf/validate/validate.proto";

import "v1/annotation.proto";

service HelloService {
 
  rpc GetUser(Req) returns (User) {
    option (google.api.http) = {
      post: "/v1/{name=users/*}", 
      body: "*" 
    };
    option (google.api.method_signature) = "hello,update_mask";
    option (bytebase.v1.permission) = "hg.settings.set";
    option (bytebase.v1.auth_method) = IAM;
  }
} 


/**
 * 请求参数
 */
 message Req {    
  // 年龄
  // 3. 年龄限制
  int32 age = 3 [(buf.validate.field).cel = {
      id: "req.age",
      expression: "this < 18 ? '用户至少年满18岁': ''"
    }];
    

  // 4. 日期限制 
  google.protobuf.Timestamp purchase_date = 4;
  google.protobuf.Timestamp delivery_date = 5;

  option (buf.validate.message).cel = {
    id: "req.delivery_date",
    message: "Delivery date 必须在 purchase date之后",
    expression: "this.delivery_date > this.purchase_date"
  };

  // 姓名
  // The name of the branch.
  // Format: projects/{project}/branches/{branch}
  // {branch} should be the id of a sheet.
  string name = 10 [(google.api.field_behavior) = REQUIRED];
}

message User {
reserved 6;

// The name of the user.
// Format: users/{user}. {user} is a system-generated unique ID.
string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}
