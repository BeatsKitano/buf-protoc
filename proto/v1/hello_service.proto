syntax = "proto3";

package api.v1;
option go_package = "api/v1";
 
import "google/api/client.proto"; 
import "google/api/annotations.proto"; 
import "google/api/resource.proto";
import "google/api/field_behavior.proto";
import "google/type/expr.proto";
import "google/protobuf/timestamp.proto"; 
import "buf/validate/validate.proto";
import "v1/annotation.proto"; 

// 提供问候语服务。
// 1. 服务级别的注解 option (google.api.default_host) = "https://huige.api.com"; 
service HelloService {  
  // google/api/client.proto 这个给到的注解
  option (google.api.default_host) = "https://huige.api.com";
  option (google.api.oauth_scopes) = "https://www.huige.com/auth/user";
  option (google.api.api_version) = "v1_20250821_preview";
 

  // 获取用户信息 
  rpc GetUser(GetUserRequest) returns (User) {
    option (google.api.http) = {
      post: "/v1/{name=users/*}", 
      body: "*" 
      // 额外绑定一个路径
      additional_bindings: {get: "/v1/{age=users/*}"}
    }; 
    // 方法级别的注解
    option (api.v1.method_extend) = {
      auth_method : 1,
      audit: true,
      permission: "hg.settings.set",
      allow_without_credential: true,
      rpm: 10,
      timeout: 1000
    };
  }
} 

// 请求参数
message GetUserRequest {    
  // 1. 字段级别的注解1
  option (google.api.resource) = {
    type: "x.x.xcom/Log";
    pattern: "{project}/logs/{log}" // 或 {folder}/logs/{log}，取决于父级资源
  };
 
  
  // 字段解释描述文本
  // 
  // syntax. CEL is a C-like expression language. The syntax and semantics of CEL
  //   
  int32 age = 3 [(buf.validate.field).cel = {
    id: "GetUserRequest.age",
    expression: "this < 18 ? '用户至少年满18岁': ''"
  }];
    

  // 购买日期
  google.protobuf.Timestamp purchase_date = 4;
  // 交付日期
  google.protobuf.Timestamp delivery_date = 5;

  // 购买日期要求说明
  option (buf.validate.message).cel = {
    id: "GetUserRequest.delivery_date",
    message: "delivery date 必须在 purchase date之后",
    expression: "this.delivery_date > this.purchase_date"
  };

  // 物品名
  string name = 10 [(google.api.field_behavior) = REQUIRED];

  // 自定义表达式
  google.type.Expr custom_expr = 11;
}
 

// 用户信息
message User {
  reserved 6;
 
  // 用户id 
  string id = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // 用户名
  string name = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

  string son = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "huige.api.com/User"}
  ];
}
